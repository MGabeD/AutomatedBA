-- create variables for user / password / role / warehouse / database (needs to be uppercase for objects)
set role_name = 'TASTY_BITES_ROLE'; -- Replace "HEVO" with your role name
set user_name = 'TASTY_USER'; -- Replace "HARRY_POTTER" with your username
set user_password = 'securePassword123!'; -- Replace "Gryffindor" with the user password
set warehouse_name = 'TASTY_BITES_WH'; -- Replace "HOGWARTS" with the name of your warehouse
set database_name = 'TASTY_BITES_SAMPLE_DATA'; -- Replace "RON" with the name of your database
set schemaName = 'PUBLIC'; -- Replace "DARK_ARTS" with the database schema name

set db_schema = concat($database_name, '.', $schemaName);

begin;

-- Change role to SECURITYADMIN for user/role steps
use role securityadmin;

-- Create role for TASTY_BITES if it does not exist
create
role if not exists identifier($role_name);
grant role identifier($role_name) to role SYSADMIN;

-- Create a user for TASTY_BITES
create user if not exists identifier($user_name)
password = $user_password
default_role = $role_name
default_warehouse = $warehouse_name;

-- Grant access to the user
grant role identifier($role_name) to user identifier($user_name);

-- Change role to SYSADMIN for warehouse/database steps
use role sysadmin;

-- Create a warehouse for TASTY_BITES, if it does not exist
create
warehouse if not exists identifier($warehouse_name)
warehouse_size = xsmall
warehouse_type = standard
auto_suspend = 60
auto_resume = true
initially_suspended = true;

-- Create database for TASTY_BITES
create database if not exists identifier($database_name);

-- Grant TASTY_BITES_ROLE access to warehouse
grant USAGE
on warehouse identifier($warehouse_name)
to role identifier($role_name);

-- Grant TASTY_BITES_ROLE access to database
grant CREATE SCHEMA, MONITOR, USAGE, MODIFY
on database identifier($database_name)
to role identifier($role_name);


-- Switch to ACCOUNTADMIN to ensure schema creation and grants can be executed
use role accountadmin;

-- Ensure the schema exists within TASTY_BITES_DB and grant necessary privileges
CREATE SCHEMA IF not exists identifier($db_schema);
GRANT USAGE, MONITOR, CREATE TABLE, CREATE EXTERNAL TABLE, MODIFY ON SCHEMA identifier($db_schema) TO ROLE identifier($role_name);

-- NEEDS WORK
-- Grant SELECT on all tables in the database to the current role
--GRANT SELECT ON ALL TABLES IN DATABASE identifier($database_name) TO ROLE identifier($role_name);

-- Grant SELECT on future tables in the database to the current role
--GRANT SELECT ON FUTURE TABLES IN DATABASE identifier($database_name) TO ROLE identifier($role_name);
-- NEEDS WORK

commit;
